#!/usr/bin/env python3

import argparse
import collections
import logging
import json

from tqdm import tqdm
import ruamel.yaml

from opusfilter.autogen import ConfigurationGenerator
from opusfilter.pipeline import FilterPipeline
from opusfilter.util import file_open, yaml


logger = logging.getLogger(__name__)
yaml = ruamel.yaml.YAML()


def read_lines(infs):
    """Read parallel segments without newlines"""
    for pair in tqdm(infs):
        yield [segment.rstrip() for segment in pair]


logging.basicConfig(level=logging.INFO)
logging.getLogger('mosestokenizer.tokenizer.MosesTokenizer').setLevel(logging.WARNING)

parser = argparse.ArgumentParser(prog='opusfilter-autogen',
    description='Generate initial configuration based on parallel text data')

parser.add_argument('files', nargs='+', metavar='TEXTFILE', help='parallel text input file(s)')
parser.add_argument('-o', '--output', type=argparse.FileType('w'), default='-', metavar='CONFIGFILE',
                    help='output configuration file')

args = parser.parse_args()

generator = ConfigurationGenerator(args.files)
yaml.dump(generator.get_config(), args.output)
